@using Unity.ClusterDisplay.MissionControl.MissionControl;
@using Unity.ClusterDisplay.MissionControl;

<RadzenTemplateForm TItem="LaunchParameterValue" Data=@Edited Submit=@OnOk Style="height: 100%;">
    <div class="row" style="height: 100%; overflow-y: auto;">
        <div> <!-- To avoid stretching every row of the fixed height container above -->
            <div class="row mb-1">
                <div class="col-12">
                    <RadzenLabel Text=@Parameter.Description />
                </div>
            </div>
            @if (Parameter.Type == LaunchCatalog.LaunchParameterType.Boolean)
            {
                <div class="row mb-1 align-items-center d-flex">
                    <div class="col-12">
                        <RadzenSwitch @bind-Value=@EditedValueBoolean />
                        <RadzenLabel class="ms-3" Text=@(EditedValueBoolean ? "True" : "False") />
                    </div>
                </div>
            }
            else if (Parameter.Type == LaunchCatalog.LaunchParameterType.Integer)
            {
                <div class="row mb-1">
                    @{
                        int minValue = int.MinValue;
                        int maxValue = int.MaxValue;
                        if (Parameter.Constraint is RangeConstraint rangeConstraint)
                        {
                            minValue = rangeConstraint.MinInt32Inclusive;
                            maxValue = rangeConstraint.MaxInt32Inclusive;
                        }
                    }
                    @if (minValue > int.MinValue && maxValue < int.MaxValue)
                    {
                        <div class="col-2">
                            <RadzenNumeric @bind-Value=@EditedValueInt32 Min=@minValue Max=@maxValue />
                        </div>
                        <div class="col-10 align-items-center d-flex">
                            <RadzenSlider @bind-Value=@EditedValueInt32 Min=@minValue Max=@maxValue Class="w-100" />
                        </div>
                    }
                    else
                    {
                        <div class="col-12">
                            <RadzenNumeric @bind-Value=@EditedValueInt32 Min=@minValue Max=@maxValue />
                        </div>
                    }
                </div>
            }
            else if (Parameter.Type == LaunchCatalog.LaunchParameterType.Float)
            {
                <div class="row mb-1">
                    @{
                        decimal minValue = decimal.MinValue;
                        decimal maxValue = decimal.MaxValue;
                        if (Parameter.Constraint is RangeConstraint rangeConstraint)
                        {
                            minValue = rangeConstraint.MinDecimalInclusive;
                            maxValue = rangeConstraint.MaxDecimalInclusive;
                        }
                    }
                    @if (minValue != decimal.MinValue && maxValue != decimal.MaxValue)
                    {
                        var step = Math.Round(maxValue - minValue, 0) / 1000;
                        <div class="col-2">
                            <RadzenNumeric TValue="float" @bind-Value=@EditedValueSingle
                                           Min=@minValue Max=@maxValue Step=@((step * 10).ToString()) />
                        </div>
                        <div class="col-10 align-items-center d-flex">
                            <RadzenSlider TValue="float" @bind-Value=@EditedValueSingle
                                          Min=@minValue Max=@maxValue Class="w-100 ms-3" Step=@step.ToString() />
                        </div>
                    }
                    else
                    {
                        <div class="col-12">
                            <RadzenNumeric TValue="float" @bind-Value=@EditedValueSingle
                                           Min=@minValue Max=@maxValue />
                        </div>
                    }
                </div>
            }
            else if (Parameter.Type == LaunchCatalog.LaunchParameterType.String)
            {
                <div class="row mb-1">
                    @{
                        if (Parameter.Constraint is LaunchCatalog.ListConstraint listConstraint)
                        {
                            <RadzenDropDown @bind-Value=@EditedValueString Class="w-100" Data=@listConstraint.Choices />
                        }
                        else if (Parameter.Constraint is RegularExpressionConstraint regexConstraint)
                        {
                            <RadzenTextBox Name="InputField" @bind-Value=@EditedValueString Class="w-100" />
                            @if (!regexConstraint.Validate(""))
                            {
                                <RadzenRequiredValidator Component="InputField" Text=@regexConstraint.ErrorMessage />
                            }
                            <RadzenRegexValidator Component="InputField" Pattern=@regexConstraint.RegularExpression
                                                  Text=@regexConstraint.ErrorMessage />
                        }
                        else
                        {
                            <RadzenTextBox @bind-Value=@EditedValueString Class="w-100" />
                        }
                    }
                </div>
            }
        </div>
    </div>
    <div class="row mt-1">
        <div class="col-12 text-end">
            <RadzenButton Text="Cancel" Click=OnCancel ButtonStyle="ButtonStyle.Light" Style="width: 120px" />
            <RadzenButton Text="Ok" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Info"
                          Style="width: 120px; margin-left:24px;" Class="me-1" />
        </div>
    </div>
</RadzenTemplateForm>
