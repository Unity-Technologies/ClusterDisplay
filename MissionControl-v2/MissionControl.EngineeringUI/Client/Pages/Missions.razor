@page "/missions"
@using Unity.ClusterDisplay.MissionControl.MissionControl;

<style>
    .rz-splitbutton button:not(.rz-splitbutton-menubutton) {
        width: 100%;
    }
</style>

@{
    var isRunning = MissionControlStatus.State != State.Idle;
    var hasChanges = LaunchConfigurationService.WorkValueNeedsPush;
    var applyPrefix = hasChanges ? "Apply & " : "";
    var applyAndSaveEnabled = !isRunning || !hasChanges;
    var applyAndSaveTitle = applyAndSaveEnabled ? "" : "Cannot apply changes while running.";
    var loadTitle = isRunning ? "Cannot load while running." : "";
}

<div Class="w-100 page-title">
<h2>Missions</h2>
<RadzenButton Click=@SaveAs Text=@($"{applyPrefix}Save New Mission") Icon="save_as" ButtonStyle="ButtonStyle.Info" class="m-1 title-bottom" Disabled=@(!applyAndSaveEnabled) title=@applyAndSaveTitle />
</div>

<RadzenDataGrid @ref="m_MissionsGrid" Data=@MissionsService.Collection.Values
                AllowMultiColumnSorting="true" ShowMultiColumnSortingIndex="true" AllowSorting="true"
                SelectionMode="DataGridSelectionMode.Single" @bind-Value=@m_SelectedMission>
    <Columns>
        <RadzenDataGridColumn TItem="SavedMissionSummary" Title="Name" Property="Description.Name" />
        <RadzenDataGridColumn TItem="SavedMissionSummary" Title="Description" Property="Description.Details" />
        <RadzenDataGridColumn TItem="SavedMissionSummary" Title="Save time" Property="SaveTime"/>
        <RadzenDataGridColumn TItem="SavedMissionSummary" Title="Asset" Sortable="false">
            <Template Context="mission">
                @if (AssetsService.Collection.TryGetValue(mission.AssetId, out var asset))
                {
                    <span>@asset.Name</span>
                }
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="SavedMissionSummary" Width="240px">
            <Template Context="mission">
                <RadzenButton Variant="Variant.Text" Click=@(() => Load(mission)) Text="Load" ButtonStyle="ButtonStyle.Info">
                </RadzenButton>
                <RadzenButton Variant="Variant.Text" Click=@(() => Overwrite(mission)) Text="Overwrite" ButtonStyle="ButtonStyle.Info" />

                <RadzenButton Icon="delete" Class="m-1 data-grid-icon" Click=@(() => Delete(mission)) ButtonStyle="ButtonStyle.Light" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

