editors:
  - version: 2023.1
  - version: trunk

platforms:
  - name: win
    type: Unity::VM
    image: package-ci/win10:stable
    flavor: b1.medium  
  - name: mac
    type: Unity::VM::osx
    image: package-ci/mac:stable
    flavor: m1.mac
  - name: linux
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.medium

projects:
  - name: LiveEditingTests
    path: TestProjects/LiveEditingTests
    packages:
      - name: com.unity.live-editing
        path: source/com.unity.live-editing
---

# The following job runs PVP API docs validation to validate all public APIs (classes and methods) have documentation.
# For APIs which are exempted from API docs validartion, they are put in pvp_exemptions.json
api_doc_validation:
  name: API documentation validation
  agent:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.medium
  commands:
    # Needed for now, until we get a recent upm-pvp into the image.
    - sudo apt-get update && sudo apt-get install -y upm-pvp
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package pack --package-path source/com.unity.live-editing
    # Download Unity.
    - unity-downloader-cli --fast --wait -u {{ editors.first.version }} -c editor
    # Run PVS in PVP mode.
    - upm-pvp test --unity .Editor --packages "upm-ci~/packages/*.tgz" --results "upm-ci~/pvp"
    # Require that PVP-20-1 (API docs validation) passed.
    - upm-pvp require PVP-20-1 --results "upm-ci~/pvp" --failures "upm-ci~/pvp/failures.json"
  artifacts:
    pvp:
      paths:
        - upm-ci~/pvp/**
    logs:
      paths:
        - upm-ci~/test-results/**

{% for project in projects %}
pack_{{ project.name }}:
  name: Pack {{ project.name }}
  agent:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.small
  commands:
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci project pack --project-path {{ project.path }}
  artifacts:
    packages:
      paths:
        - "upm-ci~/packages/**/*"
{% endfor %}

{% for project in projects %}
{% for package in project.packages %}
{% for editor in editors %}
{% for platform in platforms %}
validate_{{ project.name }}_{{ package.name }}_{{ editor.version }}_{{ platform.name }}:
  name : Validate {{ project.name }} {{ editor.version }} on {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor }}
  commands:
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci project test -u {{ editor.version }} --project-path {{ project.path }} --package-filter {{ package.name }} --type isolation-tests --extra-create-project-arg="-upmNoDefaultPackages"
  artifacts:
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
  dependencies:
    - .yamato/live-editing.yml#pack_{{ project.name }}
{% endfor %}
{% endfor %}
{% endfor %}
{% endfor %}

{% for project in projects %}
{% for editor in editors %}
{% for platform in platforms %}
test_{{ project.name }}_{{ editor.version }}_{{ platform.name }}:
  name : Test {{ project.name }} {{ editor.version }} on {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor }}
  commands:
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci project test -u {{ editor.version }} --project-path {{ project.path }} --type project-tests --extra-create-project-arg="-upmNoDefaultPackages"
  artifacts:
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
  dependencies:
    - .yamato/live-editing.yml#pack_{{ project.name }}
{% endfor %}
{% endfor %}
{% endfor %}

validate_all:
  name: Validate Live Editing packages
  dependencies:
{% for package in projects.first.packages %}
    - .yamato/live-editing.yml#validate_{{ projects.first.name }}_{{ package.name }}_{{ editors.first.version }}_{{ platforms.first.name }}
{% endfor %}

test_all:
  name: Run all Live Editing tests
  triggers:
    cancel_old_ci: true
    expression: pull_request.push.changes.any match ["source/com.unity.live-editing/**", "TestProjects/LiveEditingTests/**", ".yamato/live-editing.yml"]  OR (push.changes.any match ["source/com.unity.live-editing/**", "TestProjects/LiveEditingTests/**",  ".yamato/live-editing.yml"] AND push.branch MATCH "dev")
  dependencies:
{% for project in projects %}
{% for editor in editors %}
{% for platform in platforms %}
    - .yamato/live-editing.yml#test_{{ project.name }}_{{ editor.version }}_{{ platform.name }}
{% endfor %}
{% endfor %}
{% endfor %}
    - .yamato/live-editing.yml#api_doc_validation
    
test_nightly:
  name: Nightly Live Editing tests
  triggers:
    recurring:
      - branch: develop
        frequency: daily
  dependencies:
    - .yamato/live-editing.yml#test_all
